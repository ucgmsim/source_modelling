[build-system]
requires = ["setuptools", "setuptools-scm",  "setuptools-rust>=1.1.0"]
build-backend = "setuptools.build_meta"

[project]
name = "source_modelling"
authors = [{ name = "QuakeCoRE" }]
description = "Source modelling library"
readme = "README.md"
requires-python = ">=3.11"
dynamic = ["version"]
dependencies = [
   "numpy",
   "fiona",
   "qcore @ git+https://github.com/ucgmsim/qcore.git",
   "geopandas",
   "networkx",
   "pandas",
   "parse",
   "shapely",
   "scipy",
   "networkx"
]

[project.optional-dependencies]
test = [
     "diffimg",
     "pytest",
     "pytest-cov",
     "hypothesis[pandas, numpy]",
     "hypothesis-networkx",
]

[tool.setuptools.package-data]
source_modelling = ['NZ_CFM/*']

[tool.setuptools.package-dir]
source_modelling = "source_modelling"

[tool.ruff]
extend-exclude = ["source_modelling/ccldpy.py"]

[tool.ruff.lint]
extend-select = [
  # isort imports
  "I",
  # Use r'\s+' rather than '\s+'
  "W605",
  # All the naming errors, like using camel case for function names.
  "N",
  # Missing docstrings in classes, methods, and functions
  "D101",
  "D102",
  "D103",
  "D105",
  "D107",
  # Use f-string instead of a format call
  "UP032",
  # Standard library import is deprecated
  "UP035",
  # Missing function argument type-annotation
  "ANN001",
  # Using except without specifying an exception type to catch
  "BLE001"
]
ignore = ["D104"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
known-first-party = [
    "source_modelling",
    "workflow",
    "pygmt_helper",
    "qcore",
    "empirical",
    "nshmdb",
    "IM_calculation",
    "mera"
]

[tool.ruff.lint.per-file-ignores]
# Ignore no docstring in __init__.py
"__init__.py" = ["D104"]
# Ignore docstring errors in tests folder
"tests/**.py" = ["D"]
# ignore everything in the ccld.py module



[tool.coverage.run]
omit = [
    "source_modelling/scripts/plot_mw_contributions.py",
    "source_modelling/ccldpy.py",
]


[tool.numpydoc_validation]
checks = [
  "GL05",
  "GL08",
  "GL10",
  "PR01",
  "PR02",
  "PR03",
  "PR04",
  "PR05",
  "PR06",
  "PR07",
  "RT01",
  "RT02",
  "RT03",
  "RT04",
  "YD01",
]
# remember to use single quotes for regex in TOML
exclude = [  # don't report on objects that match any of these regex
    '\.undocumented_method$',
    '\.__repr__$',
]


[tool.maturin]
bindings = "pyo3"
path = "source_modelling/srf_parser"
